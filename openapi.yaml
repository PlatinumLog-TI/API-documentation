---
openapi: 3.0.0
info:
  title: API de Integração PlatinumLog
  version: 1.0.0
  x-logo:
    url: https://i.imgur.com/EPcxhxr.png
    
   ### http://wiki.tpl.com.br/images/thumb/c/c9/Logo.png/1050px-Logo.png###
  description: |
    BASIC, deve ser enviado no cabeçalho da requisição o usuário e a senha gerados pela Platinum Log.

    **HTTP: BearerAuth**

    A autenticação com as APIs REST da PlatinumLog deve ser realizadas por token utilizando Bearer Token. Para autenticar, você deve utilizar o token recebido na rota de Login e adicioná-lo no header da requisição.
    O header de autenticação deve ser enviado para todos os endpoints disponíveis na API.


    **HTTP Authorization Scheme:**  
    *bearer*
servers:
# Added by API Auto Mocking Plugin

- url: http://api.tpl.com.br:9909/platinumlog
  description: Servidor Web service do ambiente de produção
  
- url: http://homologa.tpl.com.br:9909/platinumlog
  description: Servidor Web service do ambiente de Homologação
   
security:
- BearerAuth: []

 ###TAGS###
tags:
- name: Segurança - Platinum
  description: |
    Endpoints para solicitação de token para acesso aos demais endpoints.
- name: Produto
  description: Endpoints para cadastro, consulta e alteração de produtos.
- name: Ordem de armazenagem
  description: Endpoints para cadastro, consulta e alteração de ordens de armazenagem.
- name: Embarcador
  description: Endpoints para consulta de processos do frete embarcador.
- name: Transporte
  description: Endpoints para consulta de processos do transporte e cotações de transporte.
- name: Envios ao servidor do cliente
  description: Endpoints que a Platinum envia dados para o Web service do cliente.

paths:

#####SEGURANÇA#####
  /authorization:
    get:
      tags:
      - Segurança - Platinum
      summary: Gerar novo token - Platinum
      description: BASIC, deve ser enviado no cabeçalho da requisição o usuário e a senha gerados pela Platinum Log.
      operationId: gettoken
      parameters:
      - name: usuario
        in: query
        description: login do usuário
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: senha
        in: query
        description: senha de acesso
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Token cadastrado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetornoGerarToken'
        "400":
          description: Conteúdo inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
              example: 'Campo obrigatório não preenchido  O campo "Tipo" é  obrigatório. Preencha o campo para salvar o registro. Campo: TIPO'
        "401":
          description: Não autorizado (Autenticação não informada ou inválida)
          
#####SEGURANÇA POST#####
  /authorizationCliente:
    post:
      tags:
      - Envios ao servidor do cliente
      summary: Gerar novo token - servidor cliente
      description: BASIC, enviamos no cabeçalho da requisição o usuário e a senha passados pelo cliente.
      operationId: gettokencliente
      parameters:
      - name: usuario
        in: query
        description: login do usuário, o nome do parâmetro pode mudar de acordo com o servidor do cliente.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: senha
        in: query
        description: senha de acesso, o nome do parâmetro pode mudar de acordo com o servidor do cliente.
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Token cadastrado com sucesso

        "400":
          description: Conteúdo inválido

        "401":
          description: Não autorizado (Autenticação não informada ou inválida)   

#####PRODUTO#####

  /materialSuprimento/produto/cadastrar:
    post:
      tags:
      - Produto
      summary: Cadastrar novo produto
      description: Cadastrar um novo produto com base nos dados informados.
      operationId: postProduto
      requestBody:
        $ref: '#/components/requestBodies/PostProduto'
      responses:
        "200":
          description: Produto cadastrada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetornoCadastroProduto'
        "400":
          description: Conteúdo inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
              example: 'Campo obrigatório não preenchido  O campo "Tipo" é  obrigatório. Preencha o campo para salvar o registro. Campo: TIPO'
        "401":
          description: Não autorizado (Autenticação não informada ou inválida)
  /materialSuprimento/produto/alterar:
    put:
      tags:
      - Produto
      summary: Alterar cadastro de produto
      description: Altera os dados do produto informado.
      operationId: putProduto
      requestBody:
        $ref: '#/components/requestBodies/PostProduto'
      responses:
        "200":
          description: Produto alterado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetornoCadastroProduto'
        "400":
          description: Parâmetro(s) inválido(s)
        "401":
          description: Não autorizado (Autenticação não informada ou inválida)
  /materialSuprimento/produto/consultarcatalogo:
    get:
      tags:
      - Produto
      summary: Consultar produtos
      description: Consulta todos os produtos ativos do cliente.
      operationId: ConsultarCatalogo
      responses:
        "200":
          description: Informações da cadastro de produtos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetornoCatalogoProduto"

        "400":
          description: Conteúdo inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroParametrosinvalidos'

        "401":
          description: Não autorizado (Autenticação não informada ou inválida)

#####EMBARCADOR#####
  /Embarcador/ocorrencia/consultar:
    ### GET ###
    get:
      tags:
        - Embarcador
      summary: Consultar Ocorrências
      description: Retorna todas as ocorrências da uma NFe buscando pela chave da NFe.
      operationId: getOcorrenciaTransporte
      parameters:

        - name: NFe
          required: true
          in: query
          description: Chave da NFe
          schema:
            type: integer
            
        
      responses:
        "200":
          description: Informações das ocorrências
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetornoOcorrencia"

        "400":
          description: Conteúdo inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroParametrosinvalidos'

        "401":
          description: Não autorizado (Autenticação não informada ou inválida)

#####TRANSPORTE#####
  /transporte/cotacao/consultarFrete:
    ### GET ###
    post:
      tags:
        - Transporte
      summary: Cotação de Frete
      description: Retorna a cotação de frete da Platinum Log.
      operationId: PostConsultarFrete
      requestBody:
        $ref: '#/components/requestBodies/PostConsultarFrete'
            
        
      responses:
        "200":
          description: Informações das ocorrências
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetornoCotacao"

        "400":
          description: Conteúdo inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroParametrosinvalidos'

        "401":
          description: Não autorizado (Autenticação não informada ou inválida)

#####ORDEM DE ARMAZENAGEM#####
  /armazem/ordem/cadastrar:
    post:
      tags:
      - Ordem de armazenagem
      summary: Cadastrar ordem de armazenagem
      description: Cadastrar uma nova ordem de armazenagem com base nos dados informados, essa ordem pode ser para realizar uma entrada ou saída de saldo.
      operationId: postOrdemArmazenagem
      requestBody:
        $ref: '#/components/requestBodies/PostOrdemArmazenagem'
      responses:
        "200":
          description: Ordem de armazenagem cadastrada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetornoOrdemCadastrada'
        "400":
          description: Conteúdo inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
              example: 'Campo obrigatório não preenchido  O campo "Tipo" é  obrigatório. Preencha o campo para salvar o registro. Campo: TIPO'
        "401":
          description: Não autorizado (Autenticação não informada ou inválida)
          
  /armazem/ordem/alterar:
    put:
      tags:
      - Ordem de armazenagem
      summary: Alterar ordem de armazenagem
      description: Alterar uma ordem de armazenagem com base nos dados informados
      operationId: putOrdemArmazenagem
      requestBody:
        $ref: '#/components/requestBodies/PutOrdemArmazenagem'
      responses:
        "200":
          description: Ordem de armazenagem alterada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetornoOrdemCadastrada'
        "400":
          description: Conteúdo inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
              example: 'Campo obrigatório não preenchido  O campo "Tipo" é  obrigatório. Preencha o campo para salvar o registro. Campo: TIPO'
        "401":
          description: Não autorizado (Autenticação não informada ou inválida)
  
  /armazem/ordem/cancelar:
    post:
      tags:
      - Ordem de armazenagem
      summary: Cancelar ordem de armazenagem
      description: Cancela a ordem de armazenagem
      operationId: deleteOrdemArmazenagem
      parameters:
      - name: Numero
        in: query
        description: Número da ordem de armazenagem
        required: true
        style: form
        explode: true
        schema:
          type: integer
      requestBody:
        $ref: '#/components/requestBodies/DeleteOrdemArmazenagem'
      responses:
        "200":
          description: Cancelamento efetuado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetornoDeleteOrdemArmazenagem'
        "400":
          description: Parâmetro(s) inválido(s)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
        "401":
          description: Não autorizado (Autenticação não informada ou inválida)
  
  /armazem/ordem/item/cadastrar:
    post:
      tags:
      - Ordem de armazenagem
      summary: Adicionar item em ordem de armazenagem de entrada
      description: Cria um item na ordem de armazenagem de entrada com base nos dados informados. Esta opção é específica para ordens de entrada
      operationId: postItemOrdemArmazenagem
      requestBody:
        $ref: '#/components/requestBodies/PostOrdemItemArmazenagem'
      responses:
        "200":
          description: Registro efetuado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetornoPostItemOrdemArmazenagem'
        "400":
          description: Conteúdo inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
        "401":
          description: Não autorizado (Autenticação não informada ou inválida)
          
  /armazem/ordem/programacao/cadastrar:
    post:
      tags:
      - Ordem de armazenagem
      summary: Adicionar programação em ordem de armazenagem de saída
      description: Cria um programação na ordem de armazenagem de saída com base nos dados informados. Esta opção é específica para ordens de saída
      operationId: postProgramacaoOrdemArmazenagem
      requestBody:
        $ref: '#/components/requestBodies/PostOrdemProgramacaoArmazenagem'
      responses:
        "200":
          description: Registro efetuado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetornoPostProgramacaoOrdemArmazenagem'
        "400":
          description: Conteúdo inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
        "401":
          description: Não autorizado (Autenticação não informada ou inválida)          
          
  /armazem/ordem/originario/cadastrar:
    post:
      tags:
      - Ordem de armazenagem
      summary: Cadastrar NF-e em ordem de armazenagem por número de ordem
      description: Cadastrar e vincular a ordem de armazenagem uma NF-e buscando pelo numero da ordem
      operationId: postNotaRemessa
      requestBody:
        $ref: '#/components/requestBodies/PostOriginario'
      responses:
        "200":
          description: Arquivo recebido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetornoPostOriginario'
        "400":
          description: Conteúdo inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
        "401":
          description: Não autorizado (Autenticação não informada ou inválida)         


  /armazem/ordem/originario/cadastrarporpedido:
    post:
      tags:
      - Ordem de armazenagem
      summary: Cadastrar NF-e em ordem de armazenagem por número de pedido
      description: Cadastrar e vincular a ordem de armazenagem uma NF-e buscando a ordem pelo numero do pedido
      operationId: postNotaRemessaPedido
      requestBody:
        $ref: '#/components/requestBodies/PostOriginarioporpedido'
      responses:
        "200":
          description: Arquivo recebido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetornoPostOriginario'
        "400":
          description: Conteúdo inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
        "401":
          description: Não autorizado (Autenticação não informada ou inválida)                  
          
  /armazem/ordem/consultar:
  
    #### GET ####
    get:
      tags:
        - Ordem de armazenagem
      summary: Consultar ordem de armazenagem individualmente.
      description: Retorna todas as informações da uma ordem de armazenagem buscando pelo numero da ordem ou pelo numero do pedido.
      operationId: getOrdemArmazenagem
      parameters:

        - name: Numero
          required: false
          in: query
          description: Número da ordem de armazenagem
          schema:
            type: integer
            
        - name: NumeroPedido
          required: false
          in: query
          description: Número do pedido da ordem de armazenagem
          schema:
            type: integer

      responses:
        "200":
          description: Informações da ordem de armazenagem
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetornoConsultaOrdem"

        "400":
          description: Conteúdo inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroParametrosinvalidos'

        "401":
          description: Não autorizado (Autenticação não informada ou inválida)

  /armazem/ordem/consultapedidoemoperacao:
  
    #### GET ####
    get:
      tags:
        - Ordem de armazenagem
      summary: Consultar todas as ordem de armazenagem que estão em operação
      description: Retorna todas as informações de todas as ordem de armazenagem que estão em operação
      operationId: getOrdemArmazenagemEmOperacao
      responses:
        "200":
          description: Informações das ordens de armazenagem em operação
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetornoConsultaOrdemEmOperacao"

        "400":
          description: Conteúdo inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'

        "401":
          description: Não autorizado (Autenticação não informada ou inválida)

  /armazem/ordem/consultarpedidopendente:
  
    #### GET ####
    get:
      tags:
        - Ordem de armazenagem
      summary: Consultar todas as ordens de armazenagem de saída que estão Ag NF-e para transporte.
      description: Retorna todas as informações de todas as ordens de armazenagem de saída que estão Ag NF-e para transporte.
      operationId: getOrdemArmazenagemPendente
      responses:
        "200":
          description: Informações das ordens de armazenagem encerradas
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetornoConsultaOrdemPendente"

        "400":
          description: Conteúdo inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'

        "401":
          description: Não autorizado (Autenticação não informada ou inválida)  
  /armazem/ordem/consultapedidoencerrado:
  
    #### GET ####
    get:
      tags:
        - Ordem de armazenagem
      summary: Consultar todas as ordem de armazenagem que estão encerradas.
      description: Retorna todas as informações de todas as ordem de armazenagem que estão encerradas e ainda não foram consultadas neste método.
      operationId: getOrdemArmazenagemEncerrada
      responses:
        "200":
          description: Informações das ordens de armazenagem encerradas
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetornoConsultaOrdemEncerrada"

        "400":
          description: Conteúdo inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'

        "401":
          description: Não autorizado (Autenticação não informada ou inválida)  
  
  /armazem/ordem/consultarordem:
  
    #### GET ####
    get:
      tags:
        - Ordem de armazenagem
      summary: Consultar situação atual e a data de execução das etapas da ordem de armazenagem individualmente 
      description: Retorna as datas dos processos da ordem de armazenagem.
      operationId: getOrdemArmazenagemData
      parameters:

        - name: Numero
          required: true
          in: query
          description: Número da ordem de armazenagem
          schema:
            type: integer

      responses:
        "200":
          description: Informações da ordem de armazenagem
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetornoConsultaOrdemData"

        "400":
          description: Conteúdo inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroParametrosinvalidos'

        "401":
          description: Não autorizado (Autenticação não informada ou inválida)
          
  /enviostatusordem:
  
    #### POST ####
    post:
      tags:
        - Envios ao servidor do cliente
      summary: Envia a situação das ordens de armazenagem.
      description: Envia situação atual da ordem de armazenagem no momento em que a ordem muda de situação.
      operationId: postenviostatusordem


      responses:
        "200":
          description: Informações da ordem de armazenagem
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetornoConsultaOrdem"

        "400":
          description: Conteúdo inválido

        "401":
          description: Não autorizado (Autenticação não informada ou inválida)          

  /armazem/estoque/consultar:
  
    #### GET ####
    get:
      tags:
        - Produto
      summary: Consultar Estoque 
      description: Retorna o saldo atual do estoque de um determinado produto ou de todos os produtos.
      operationId: getEstoque
      parameters:

        - name: Produto
          required: false
          in: query
          description: Código de referência do produto que deseja consultar, se este parâmetro não for informado retornará o saldo de todos os produtos.
          schema:
            type: integer

      responses:
        "200":
          description: Informações da ordem de armazenagem
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetornoConsultaEstoque"

        "400":
          description: Conteúdo inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroParametrosinvalidos'

        "401":
          description: Não autorizado (Autenticação não informada ou inválida)


 
components:

###SCHEMAS###
  schemas:
  
#####SCHEMAS DE RETORNOS#####
    Erro:
      required:
      - mensagem
      type: object
      properties:
        mensagem:
          type: string
          description: Descrição do erro
          
    ErroParametrosinvalidos:          
      required:
      - mensagem
      type: object
      properties:
        mensagem:
          type: string
          description: Descrição do erro 
          example: Parâmetro(s) inválido(s)          
          
    RetornoCadastroRegistro:
      type: object
      properties:
        Retorno:
          type: array
          items:
            $ref: "#/components/schemas/RetornoCadastroRegistro_Retorno"
    RetornoCadastroRegistro_Retorno:
      properties:
        id:
          type: integer
          description: int32
          example: 468415        

    RetornoGerarToken:
      type: object
      properties:
        Retorno:
          type: array
          items:
            $ref: "#/components/schemas/RetornoGerarToken_Retorno"
    RetornoGerarToken_Retorno:
      properties:
        token:
          type: string
          description: Token que irá permitir o consumo da API webservice
          example: YYko8uSVoyF9tGtan+o75AponwE=
    
    
          
    RetornoCadastroProduto_Retorno:
      properties:
        id:
          type: integer
          description: int32 - Id gerado no sistema da PlatinumLog referente ao cadastro do produto
          example: 468415
        CodigoReferencia:
          type: string
          description: Código de referencia do produto
    RetornoOrdemCadastrada_Retorno:
      properties:
        id:
          type: integer
          description: int32 - Id da ordem de armazenagem gerado no sistema da PlatinumLog.
          example: 468415
        Numero:
          type: integer
          description: Numero da ordem gerada
          example: 568515
        
    RetornoCadastroProduto:
      type: object
      properties:
        Retorno:
          type: array
          items:
            $ref: "#/components/schemas/RetornoCadastroProduto_Retorno"
            
    RetornoOcorrencia:
      type: object
      properties:
        Retorno:
          type: array
          items:
            $ref: "#/components/schemas/RetornoOcorrenciaConsultar"
      
    RetornoOcorrenciaConsultar:
      properties:
        Numero:
          type: string
          description: Tipo da ocorrencia
          example: "1686154"
        Data:
          type: string
          description: data e hora da ocorrencia
          example: 25/04/2022 17:35
        Filial:
          type: integer
          description: Filial do Cte
          example: PLATINUM LOG - RIO DE JANEIRO - PL05
        Codigo: 
            type: string
            description: Tipo da ocorrencia          
            example: '01'
        Tipo: 
            type: string
            description: Tipo da ocorrencia          
            example: 1- ENTREGA OK
        Acao:
            type: string
            description: Tipo da ocorrencia          
            example: Efetua entrega,
        Municipio:
            type: string
            description: Tipo da ocorrencia          
            example: Rio de Janeiro
        Estado:
            type: string
            description: Tipo da ocorrencia          
            example: RJ
        Observacao: 
            type: string
            description: Tipo da ocorrencia          
            example: Entregue sem ocorrências
        Responsavel:
            type: array
            items:
                $ref: "#/components/schemas/Responsavel"

    Responsavel:
      properties:
        Documento:
          type: integer
          description: Documento do destinatário
          example: "12312312323"
        Nome:
          type: string
          description: Nome do destinatário
          example: Fulano de Tal
    
    RetornoCotacao:
      properties:
        Cotacao:
          type: integer
          description: Código da cotação
          example: "16863154"
        ValorFrete:
          type: number
          description: Valor do frete (separação de decimal . )
          example: "120.55"
        CnpjTransportadora:
          type: integer
          description: CNPJ da transportadora
          example: 12.121.123/1231-23
        NomeTransportadora: 
            type: string
            description: Nome da Transportadora          
            example: Platinum Log
        PrazoEntrega:
            type: integer
            description: Dias para entrega          
            example: "10"
        Modalidade:
            type: string
            description: Modalidade do transporte        
            example: Rodoviário
         
    RetornoOrdemCadastrada:
      type: object
      properties:
        Retorno:
          type: array
          items:
            $ref: "#/components/schemas/RetornoOrdemCadastrada_Retorno"
    RetornoDeleteOrdemArmazenagem:
      properties:
        Mensagem:
          type: string
          description: Mensagem de retorno
          example: Cancelamento efetuado
          
    RetornoPostItemOrdemArmazenagem:
      properties:
        Mensagem:
          type: string
          description: Mensagem de retorno
          example: Registro efetuado
                
    RetornoPostProgramacaoOrdemArmazenagem:
      properties:
        Mensagem:
          type: string
          description: Mensagem de retorno
          example: Registro efetuado

    RetornoPostOriginario:
      properties:
        Mensagem:
          type: string
          description: Mensagem de retorno
          example: Arquivo recebido
          
    CamposPadraoOrdemGet:
      type: object
      properties: 
        Id:
          description: Identificador da ordem de armazenagem consultada
          type: string
        Numero:
          description: Número da ordem de armazenagem consultada
          type: string
        NumeroPedido:
          description: Número de pedido da ordem de armazenagem consultada
          type: string
        NumeroControle:
          description: Número de controle da ordem de armazenagem consultada
          type: string
        Filial:
          description: Descrição da filial
          type: string
        Cliente:
          description: Descrição do cliente
          type: string
        Situacao:
          description: Situação atual da ordem de armazenagem
          type: string
          example: Encerrada
        DataStatus:
          description: Data de mudança de status atual da ordem de armazenagem
          type: string
          example: "01/05/2023 11:23:00"

    RetornoConsultaOrdem:
      $ref: "#/components/schemas/OrdemGet"
      
    OrdemGet:
      allOf:
        - $ref: "#/components/schemas/CamposPadraoOrdemGet" 
        - description: Ordem de armazenagem
          type: object
          required:
            - Numero
            - Filial
            - Tipo
            - Cliente
            - ClienteFaturamento
            - Solicitacao
            - Data
          properties:
            Entrada:
              $ref: "#/components/schemas/EntradaGet"
            programacao:
              type: array
              items:
                $ref: "#/components/schemas/ProgramacaoGet"
            Expedicao:
              type: array
              items:
                $ref: "#/components/schemas/ExpedicaoGet"
            Separacao:
              type: array
              items:
                $ref: "#/components/schemas/SeparacaoGet"
            XMLRetorno:
              type: array
              items:
               $ref: "#/components/schemas/XMLRetornoGet" 
                
    ProgramacaoGet:
      description: Será exportado quando a ordem de saída estiver na situação em operação, ag inicio de operação, ag faturamento venda, em expedição ou encerrada
      type: object
      properties:
        Item: 
          description: Código de referência e nome do produto
          type: string
          example: ITBMO0114A19 - VINHO BARONE MONTALTO ACQUERELLO NERO D AVOLA TERRE SICILIANE IGT
        Quantidade: 
          description: Quantidade programada
          type: number
          example: 1,5
        QuantidadeCancelada: 
          description: Quantidade cancelada
          type: number
          example: 1,5            
                
    ExpedicaoGet:
      description: Será exportado quando a ordem de saída estiver na situação ag faturamento venda, em expedição ou encerrada
      type: object
      properties:
        Volume: 
          description: Quantidade de volumes que será expedido
          type: integer
          example: 1
        TipoEmbalagem: 
          description: Tipo de embalagem utilizada na expedição
          type: string
          example: Caixa 10
        PesoLiquido: 
          description: Peso líquido dos volumes expedidos
          type: number
          example: 1,5
        PesoBruto: 
          description: Peso bruto dos volumes expedidos
          type: number
          example: 1,5
        Cubagem: 
          description: Cubagem unitária dos volumes expedidos
          type: number
          example: 1,5
                
    SeparacaoGet:
      description: Será exportado quando a ordem de saída estiver na situação ag montar volume, ag faturamento venda, em expedição ou encerrada e possuir produtos que controlam série ou lote.
      type: object
      properties:
        Situacao: 
          description: Situação atual da separação do item serializado
          type: string
          example: Ag. Gerar Carregamento
        Lote: 
          description: Nº do lote separado (Somente retornará numero de lote se na entrada o produto foi recebido realizando a leitura do lote).
          type: string
          example: L125636
        NumeroSerie: 
          description: Nº de série separado (Somente retornará numero de série se na entrada o produto foi recebido realizando a leitura da série).
          type: string
          example: 551588881547
        Fabricacao: 
          description: Data de fabricação do lote (Somente retornará a data de fabricação se na entrada o produto foi recebido comparâmetros de controlar data de fabricação).
          type: string
          example: 01/01/2001     
        Validade: 
          description: Data de validade do lote (Somente retornará a data de validade se na entrada o produto foi recebido comparâmetros de controlar data de validade).
          type: string
          example: 01/01/2031   
        Sequencial: 
          description: Nº sequencial do item
          type: string
          example: 1  
        Item: 
          description: Código de referência do produto
          type: string
          example: 4234-3522-5432  

    XMLRetornoGet:
      title: XML de Retorno
      type: object
      properties:
        XML:
          description: Será exportado o XML de retorno na ordem de saída.
          type: string
          example: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPG5mZVByb2MgeG1sbnM9Imh0dHA6Ly
     

    EntradaGet:
      title: Entrada de mercadoria
      description: Somente informado quando for uma entrada de mercadoria e a ordem estiver encerrada
      allOf:
        - $ref: "#/components/schemas/EntradaPadraoGet"
        - properties:  
            Item:
              type: array
              items:
                $ref: "#/components/schemas/ItemEntradaGet"           
                
    
    EntradaPadraoGet:
      type: object
      properties:
        LocalColeta: 
          description: Descrição do local de coleta
          type: integer
        EnderecoLocalColeta: 
          description: Descrição do endereço do local de coleta
          type: integer
        ChaveDocumentoEletronico: 
          description: Chave do documento eletrônico
          type: string
          example: "24130401211699999126550010001026811138186206"
        Recebimento:
          $ref: "#/components/schemas/RecebimentoGet"

    ItemEntradaGet:
      allOf:          
        - $ref: "#/components/schemas/ItemEntradaPadraoGet"      
        - properties:
            Situacao:
              type: string
              description: Situação do registro
              example: Cadastrada(o) 
            Sequencial:
              type: integer
              description: Sequencial 
            UnidadeMedida:
              type: string
              description: Sigla da unidade de medida
            UnidadeVolume:
              type: string
              description: Sigla da unidade de volume
            UnidadeEstoque:
              type: string
              description: Sigla da unidade de estoque
            NumeroDocumento:
              type: string
              description: Número do documento
            SequencialPedido:
              type: string
              description: Número do documento
            Lote:
              type: array
              items:
                $ref: "#/components/schemas/ItemLoteEntradaGet"

    RecebimentoGet:
          type: array
          items:
            $ref: "#/components/schemas/DadosRecebimentoGet"
            
    ItemEntradaPadraoGet:
      type: object
      description: Dados do item de entrada
      required:
        - Item
      allOf:
        - $ref: "#/components/schemas/ProdutoEntradaGet"
        - $ref: "#/components/schemas/CamposItemOrdemEntradaPadrao"            

    ItemLoteEntradaGet:
      allOf:  
        - $ref: "#/components/schemas/ItemLoteGet"            
      
    DadosRecebimentoGet:
      type: object
      properties:
        TipoDescarga: 
          description: Descrição do tipo da descarga
          type: string
        Transportadora: 
          description: Descrição da transportadora
          type: string
        Fornecedor: 
          description: Descrição do fornecedor
          type: string
        Placa: 
          description: Placa do veículo
          type: string
          example: "ABC-1234"
        UFPlaca:
          description: Descrição do estado do veículo
          type: string
        Carreta:
          description: Placa da carreta do veículo
          type: string
          example: "DEF-5678"
        Conteiner: 
          description: Descrição do conteiner
          type: string
        Motorista:
          description: Motorista
          type: string
        NumeroDocumento:
          description: Número do documento do motorista
          type: string
        Processo: 
          description: Processo
          type: string
          example: "ERD123" 
          
    ProdutoEntradaGet:
      type: object
      properties:
        Produto:
          description: Descrição do produto
          type: string
          
    ItemLoteGet:
      type: object
      description: Dados do lote de entrada
      allOf:  
        - properties:
            Situacao:
              type: string
              description: Situação do registro
              example: Cadastrada(o)   
          
            NumeroDescarga:
              description: Número da descarga
              type: integer
              
        - $ref: "#/components/schemas/DadosConsultaLoteEntradaPadrao"              
        - $ref: "#/components/schemas/ValoresConsultaLoteEntradaPadrao"
        
        - properties:
            Sequencial:
              type: integer
              description: Sequencial
            Serie:
              $ref: "#/components/schemas/ListaSerieEntradaGet"
    DadosConsultaLoteEntradaPadrao:
      type: object
      properties:
        Fabricacao:
          type: string
          description: Data de fabricação (dd/mm/yyyy)
          example: 06/12/1990
        Validade:
          type: string
          description: Data de validade (dd/mm/yyyy)
          example: 06/12/1990
        Lote:
          type: string
          description: Lote
          example: "546249967"
    ValoresConsultaLoteEntradaPadrao:
      type: object
      properties:
        Quantidade:
          multipleOf: 0.0001
          type: number
          description: Quantidade
          example: 10
        Estoque:
          multipleOf: 0.0001
          type: number
          description: Estoque
          example: 10          
        PesoLiquido:
          multipleOf: 0.0001
          type: number
          description: Peso Líquido
          example: 10
        PesoBruto:
          multipleOf: 0.0001
          type: number
          description: Peso Bruto
          example: 10
        Valor:
          multipleOf: 0.01
          type: number
          description: Valor
          example: 10
        Volume:
          type: integer
          description: Volume
          example: 10
          
    ListaSerieEntradaGet:
          type: array
          items:
            $ref: "#/components/schemas/SerieEntradaGet"
            
    SerieEntradaGet:
      type: object
      properties:
        NumeroSerie:
          type: string
          description: Número da série lida no recebimento
          example: 202246033   
        Quantidade:
          type: number
          description: Quantidade
          example: 1 
        PesoLiquido:
          multipleOf: 0.0001
          type: number
          description: Peso Líquido
          example: 10
        PesoBruto:
          multipleOf: 0.0001
          type: number
          description: Peso Bruto
          example: 10  
        Valor:
          multipleOf: 0.01
          type: number
          description: Valor
          example: 10
          
    
    TransporteOcorrenciaGet:
      type: object
      properties:
        Ocorrencia:
          description: Descrição do produto
          type: string
          
    ItemOcorrencia:
      type: object
      description: Dados do lote de entrada
      allOf:  
        - properties:
            Situacao:
              type: string
              description: Situação do registro
              example: Cadastrada(o)   
          
            NumeroDescarga:
              description: Número da descarga
             
                
        - properties:
            Sequencial:
              type: integer
              description: Sequencial
            Serie:
              $ref: "#/components/schemas/ListaSerieEntradaGet"
    
    
    RetornoConsultaOrdemEmOperacao:
      type: object
      properties:
        Retorno:
          type: array
          items:
            $ref: "#/components/schemas/OrdemEmOperacaoGet"
 
    OrdemEmOperacaoGet:
      allOf:
        - $ref: "#/components/schemas/CamposPadraoOrdemEmOperacaoGet" 
        - description: Ordem de armazenagem
          type: object
          required:
            - Filial
            - Tipo
            - Cliente
          properties:

            programacao:
              type: array
              items:
                $ref: "#/components/schemas/ProgramacaoGet"
            Expedicao:
              type: array
              items:
                $ref: "#/components/schemas/ExpedicaoGet"
            Separacao:
              type: array
              items:
                $ref: "#/components/schemas/SeparacaoGet"

    CamposPadraoOrdemEmOperacaoGet:
      type: object
      properties: 
        Id:
          description: Identificador da ordem de armazenagem consultada
          type: string
        NumeroOrdem:
          description: Número da ordem de armazenagem consultada
          type: string
        NumeroPedido:
          description: Número de pedido da ordem de armazenagem consultada
          type: string
        NumeroControle:
          description: Número de controle da ordem de armazenagem consultada
          type: string          
        Filial:
          description: Descrição da filial
          type: string
        Cliente:
          description: Descrição do cliente
          type: string
        ClienteFinal:
          description: Nome cliente Final da ordem de saída
          type: string
          example: Fulano de Tal
        CnpjCpf:
          description: CNPJ ou CPF do cliente final
          type: string
          example: 98765432132
        Endereco:
          description: Endereço do cliente final
          type: string
          example: 98765432132
        Numero:
          description: Numero do endereço do cliente final
          type: string
          example: 98765432132
        Cep:
          description: CEP do endereço do cliente final
          type: string
          example: 98765432132  
        Municipio:
          description: Munincipio do endereço do cliente final
          type: string
          example: 98765432132
        Estado:
          description: Sigla do estado do endereço do cliente final
          type: string
          example: 98765432132 
        Bairro:
          description: Bairro do endereço do cliente final
          type: string
          example: Bairro Azenha 
        Telefone:
          description: Telefone do endereço do cliente final
          type: string
          example: 11987654321 
        Email:
          description: Email do endereço do cliente final
          type: string
          example: fulano@xyz.com  
        TransportadoraCnpj:
          description: CNPJ da transportadora
          type: string
          example: 98765432132 
        Transportadora:
          description: Nome da transportadora cadastrada na Platinum
          type: string
          example: 98765432132           
        Situacao:
          description: Situação atual da ordem de armazenagem
          type: string
          example: 'Cadastrada'
        DataStatus:
          description: Data e hora de mudança de status da ordem de saída.
          type: string
          example: '01/05/2023 12:59:00' 

    RetornoConsultaOrdemEncerrada:
      type: object
      properties:
        Retorno:
          type: array
          items:
            $ref: "#/components/schemas/OrdemEncerradaGet"
 
    OrdemEncerradaGet:
      allOf:     
        - $ref: "#/components/schemas/CamposPadraoOrdemEncerradaGet"   
        - description: Ordem de armazenagem
          type: object
          required:
            - Filial
            - Tipo
            - Cliente

    CamposPadraoOrdemEncerradaGet:
      type: object
      properties: 
        Id:
          description: Identificador da ordem de armazenagem de consultada
          type: string
        Numero:
          description: Número da ordem de armazenagem consultada          
          type: string
        NumeroPedido:
          description: Número do pedido da ordem de armazenagem consultada          
          type: string
        NumeroControle:
          description: Número de controle da ordem de armazenagem consultada          
          type: string
        Filial:
          description: Descrição da filial
          type: string
        Cliente:
          description: Descrição do cliente
          type: string
        Situacao:
          description: Situação atual da ordem de armazenagem
          type: string
          example: Encerrada
        DataStatus:
          description: Data de mudança de situação atual da ordem de armazenagem
          type: string
          example: "01/04/2022 18:04:22"          
        Entrada:
          $ref: "#/components/schemas/EntradaGet"           
        programacao:
          type: array
          items:
            $ref: "#/components/schemas/ProgramacaoGet"
        Expedicao:
          type: array
          items:
            $ref: "#/components/schemas/ExpedicaoGet"
        Separacao:
          type: array
          items:
            $ref: "#/components/schemas/SeparacaoGet"
        XMLRetorno:
          type: array
          items:
            $ref: "#/components/schemas/XMLRetornoGet"
            
    RetornoConsultaOrdemData:
      type: object
      properties:
        Etapa:
          type: string
          description: Nome da etapa
          example: CONFERÊNCIA
        DataConclusao:
          type: string
          description: Data da conclusão da etapa
          example: 02/07/2020 17:41:11

    RetornoConsultaOrdemPendente:
      type: object
      properties:
        Pedidos:
          type: array
          items:
            $ref: "#/components/schemas/CamposPadraoOrdemPendenteget"
            
        
    CamposPadraoOrdemPendenteget:
      type: object
      properties: 
        NumeroOrdem:
          description: Número da ordem de saída consultada
          type: string
        NumeroPedido:
          description: Número de pedido da ordem de armazenagem
          type: string
        NumeroControle:
          description: Número de controle da ordem de armazenagem
          type: string
        IdOrdem:
          description: ID no sistema da PlatinumnLog referente da ordem de saída consultada
          type: string
        Filial:
          description: CNPJ sem máscara da filial da Platinum
          type: string
        Cliente:
          description: CNPJ sem máscara do proprietário da mercadoria
          type: string
          example: Encerrada
        Situacao:
          description: Situação atual da ordem de saída.
          type: string
          example: Ag faturamento de venda
        DataStatus:
          description: Data e hora de mudança de status da ordem de saída.
          type: string
          example: '01/05//2023 12:59:00'          
        Volume:
          description: Quantidade de volumes que será expedido
          type: string
          example: Encerrada 
        Peso:
          description: Peso total dos volumes expedidos
          type: string
          example: Encerrada           
        Cubagem:
          description: Cubagem unitária dos volumes expedidos
          type: string
          example: Encerrada          
        Separacao:
          type: array
          items:
            $ref: "#/components/schemas/SeparacaoGet"
            
            
    RetornoConsultaEstoque:
      type: object
      properties:
        Retorno:
          type: array
          items:
            $ref: "#/components/schemas/EstoqueGet"

    EstoqueGet:
      allOf:     
        - $ref: "#/components/schemas/CamposPadraoEstoqueGet"   
        - description: Ordem de armazenagem
          type: object
          required:
            - Filial
            - Cliente
            - Item
            
    CamposPadraoEstoqueGet:
      type: object
      properties: 
        Filial:
          description: CNPJ sem máscara da filial da Platinum
          type: string
        Cliente:
          description: CNPJ sem máscara do proprietário da mercadoria          
          type: string
        Item:
          description: Código de referência do produto + nome do produto
          type: string
        Ordem:
          description: Número da ordem de entrada
          type: string
        NumeroPedido:
          description: Número do pedido da ordem de entrada
          type: string
        DocumentoRemessa:
          description: Número do documento de remessa
          type: string
        Lote:
          type: string
          description: Numero do lote recebido
          example: 546249967
        NumeroSerie:
          description: Número do série do produto em estoque
          type: string
        Fabricacao:
          type: string
          description: Data de fabricação (dd/mm/yyyy)
          example: 06/12/1990
        Validade:
          type: string
          description: Data de validade (dd/mm/yyyy)
          example: 06/12/1990
        Conteiner: 
          description: Descrição do conteiner
          type: string
        UnidadeMedida:
          type: string
          description: |
           Sigla da unidade de medida do produto. <br>
           Unidades de medida disponíveis:<br>
           * BD - Balde<br>
           * BIG BAG - Big Bag<br>
           * BOB - Bobina<br>
           * BJ - Bujão<br>
           * BY SEND - By Send<br>
           * BY VALUE - By Value<br>
           * CX - Caixa<br>
           * CAIXA - Caixa<br>
           * CM - Caixa Master<br>
           * CDA - Cada<br>
           * CJ - Conjunto<br>
           * CA - Caixa Inner<br>
           * FD - Fardos<br>
           * GF - Garrafas<br>
           * JG - Jogo<br>
           * KGLQ - Peso Líquido<br>
           * KIT - Kit<br>
           * MQ - Máquina<br>
           * MT - Metro<br>
           * M3 - Metro Cubico<br>
           * M2 - Metro Quadrado<br>
           * PCT - Pacote<br>
           * PT - Palete<br>
           * PLT - Palete<br>
           * PR - Pares<br>
           * PECA - Peças<br>
           * PC - Peças<br>
           * PCS - Peças<br>
           * CNTR - Contêiner<br>
           * TON - Tonelada<br>
           * QL - Quilograma<br>
           * KGL - Quilograma<br>
           * KG - Quilograma<br>
           * RL - Rolo<br>
           * SC - Saco<br>
           * TAMBOR - Tambor<br>
           * TB - Tambor<br>
           * TONEL - Tonel<br>
           * T - Tonelada<br>
           * TN - Tonelada<br>
           * TM - Tonelada<br>
           * UN - Unidade<br>
           * UNTD - Unidade<br>
           * W - Watt<br>
        DisponivelQuantidade:
          type: number
          description: Quantidade do produto em estoque disponível para venda
          example: 30
        BloqueadoQuantidade:
          type: number
          description: Quantidade do produto em estoque bloqueada para venda.
          example: 5
        SeparacaoQuantidade:
          type: number
          description: Quantidade do produto em estoque aguardando separação ou expedição.
          example: 5   
        SaldoTotal:          
          type: number
          description: Quantidade total do produto em estoque.
          example: 40  

    
    RetornoCatalogoProduto:
      type: object
      properties:
        Retorno:
          type: array
          items:
            $ref: "#/components/schemas/CatalogoGet"
            
    CatalogoGet:
      type: object
      properties: 
        CodigoReferencia:
          description: Código de Referencia do Produto
          type: string
          example: KJHPOIJH4564654
        Descrição:
          description: Descrição do Produto         
          type: string
          example: Produto Teste
        UnidadeMedida:
          type: string
          description: Sigla da unidade de medida do produto. <br>
          example: UN
        Altura:
          type: string
          description: Altura do produto
          example: 0,30
        Largura:
          type: string
          description: Largura do Produto
          example: 0,50
        Comprimento:
          type: string
          description: Comprimento do produto
          example: 0,50   
        PesoLiquido:          
          type: string
          description: Peso liquido do produto
          example: 0,9
        PesoBruto:          
          type: string
          description: Peso bruto do produto
          example: 1,00
        CodigoBarra:
          type: array
          items:
            $ref: "#/components/schemas/CodigoBarraGet"        
           

    CodigoBarraGet:
      description: Será exportado quando a ordem de saída estiver na situação ag montar volume, ag faturamento venda, em expedição ou encerrada e possuir produtos que controlam série ou lote.
      type: object
      properties:
        CodigoBarra: 
          description: Codigo de barras do item
          type: string
          example: 78945612345
        Tipo: 
          description: Tipo do código de barras cadastrado
          type: string
          example: EAN13


#####SCHEMAS REQUESTMODY PRODUTO#####
    ListaProduto:
      type: object
      properties:
        Item:
          type: array
          items:
            $ref: "#/components/schemas/MaterialSuprimentoProdutoPost"
      description: Listagem de produtos         
    MaterialSuprimentoDadosProdutoArmazemPost:
      type: object
      properties:
        UtilizaControleNumeroSerie:
          type: string
          description: Indica que o produto controla número de série, enviar "S" para sim e "N" para não
          example: S
        KitPacote:
          type: string
          description: Indica que o produto é um KIT com composição de mais itens, enviar "S" para sim e "N" para não
          example: S  
    MaterialSuprimentoDadosProdutoCodigoBarraPost:
      required:
      - CodigoBarras
      - Tipo
      - UnidadeMedida
      - GrupoRotulagem
      type: object
      properties:
        UnidadeMedida:
          type: string
          description: |
           Sigla da unidade de medida relacionada ao código de barras. <br>
           Unidades de medida disponíveis:<br>
           * BD - Balde<br>
           * BIG BAG - Big Bag<br>
           * BOB - Bobina<br>
           * BJ - Bujão<br>
           * BY SEND - By Send<br>
           * BY VALUE - By Value<br>
           * CX - Caixa<br>
           * CAIXA - Caixa<br>
           * CM - Caixa Master<br>
           * CDA - Cada<br>
           * CJ - Conjunto<br>
           * CA - Caixa Inner<br>
           * FD - Fardos<br>
           * GF - Garrafas<br>
           * JG - Jogo<br>
           * KGLQ - Peso Líquido<br>
           * KIT - Kit<br>
           * MQ - Máquina<br>
           * MT - Metro<br>
           * M3 - Metro Cubico<br>
           * M2 - Metro Quadrado<br>
           * PCT - Pacote<br>
           * PT - Palete<br>
           * PLT - Palete<br>
           * PR - Pares<br>
           * PECA - Peças<br>
           * PC - Peças<br>
           * PCS - Peças<br>
           * CNTR - Contêiner<br>
           * TON - Tonelada<br>
           * QL - Quilograma<br>
           * KGL - Quilograma<br>
           * KG - Quilograma<br>
           * RL - Rolo<br>
           * SC - Saco<br>
           * TAMBOR - Tambor<br>
           * TB - Tambor<br>
           * TONEL - Tonel<br>
           * T - Tonelada<br>
           * TN - Tonelada<br>
           * TM - Tonelada<br>
           * UN - Unidade<br>
           * UNTD - Unidade<br>
           * W - Watt<br>
        Tipo:
          type: integer
          description: |
           Id do tipo de código de barra no sistema da PlatinumLog <br>
           Valores possíveis: <br> 
           * 1000 - volume unitário <br> 
           * 1010 - ean <br> 
           * 1002 - ean13 <br> 
           * 1003 - ean12
           
        GrupoRotulagem:
          type: integer
          description: |
           Id do grupo de rotulagem que contém informações de etiquetas sistema da PlatinumLog <br>
           Valores possíveis: <br> 
           * 1 - produto
        CodigoBarras:
          type: string
          description: Código de barras do produto
    MaterialSuprimentoDadosProdutoFatorConversaoPost:
      required:
      - De
      - Operacao
      - Para
      - Quantidade
      type: object
      properties:
        De:
          type: string
          description: | 
           Sigla da unidade de medida ou da unidade de volume do produto  <br>
           Unidades de medida disponíveis:<br>
           * BD - Balde<br>
           * BIG BAG - Big Bag<br>
           * BOB - Bobina<br>
           * BJ - Bujão<br>
           * BY SEND - By Send<br>
           * BY VALUE - By Value<br>
           * CX - Caixa<br>
           * CAIXA - Caixa<br>
           * CM - Caixa Master<br>
           * CDA - Cada<br>
           * CJ - Conjunto<br>
           * CA - Caixa Inner<br>
           * FD - Fardos<br>
           * GF - Garrafas<br>
           * JG - Jogo<br>
           * KGLQ - Peso Líquido<br>
           * KIT - Kit<br>
           * MQ - Máquina<br>
           * MT - Metro<br>
           * M3 - Metro Cubico<br>
           * M2 - Metro Quadrado<br>
           * PCT - Pacote<br>
           * PT - Palete<br>
           * PLT - Palete<br>
           * PR - Pares<br>
           * PECA - Peças<br>
           * PC - Peças<br>
           * PCS - Peças<br>
           * CNTR - Contêiner<br>
           * TON - Tonelada<br>
           * QL - Quilograma<br>
           * KGL - Quilograma<br>
           * KG - Quilograma<br>
           * RL - Rolo<br>
           * SC - Saco<br>
           * TAMBOR - Tambor<br>
           * TB - Tambor<br>
           * TONEL - Tonel<br>
           * T - Tonelada<br>
           * TN - Tonelada<br>
           * TM - Tonelada<br>
           * UN - Unidade<br>
           * UNTD - Unidade<br>
           * W - Watt<br> 
        Para:
          type: string
          description: |
           Sigla da unidade de medida ou da unidade de volume do produto  <br>
           Unidades de medida disponíveis:<br>
           * BD - Balde<br>
           * BIG BAG - Big Bag<br>
           * BOB - Bobina<br>
           * BJ - Bujão<br>
           * BY SEND - By Send<br>
           * BY VALUE - By Value<br>
           * CX - Caixa<br>
           * CAIXA - Caixa<br>
           * CM - Caixa Master<br>
           * CDA - Cada<br>
           * CJ - Conjunto<br>
           * CA - Caixa Inner<br>
           * FD - Fardos<br>
           * GF - Garrafas<br>
           * JG - Jogo<br>
           * KGLQ - Peso Líquido<br>
           * KIT - Kit<br>
           * MQ - Máquina<br>
           * MT - Metro<br>
           * M3 - Metro Cubico<br>
           * M2 - Metro Quadrado<br>
           * PCT - Pacote<br>
           * PT - Palete<br>
           * PLT - Palete<br>
           * PR - Pares<br>
           * PECA - Peças<br>
           * PC - Peças<br>
           * PCS - Peças<br>
           * CNTR - Contêiner<br>
           * TON - Tonelada<br>
           * QL - Quilograma<br>
           * KGL - Quilograma<br>
           * KG - Quilograma<br>
           * RL - Rolo<br>
           * SC - Saco<br>
           * TAMBOR - Tambor<br>
           * TB - Tambor<br>
           * TONEL - Tonel<br>
           * T - Tonelada<br>
           * TN - Tonelada<br>
           * TM - Tonelada<br>
           * UN - Unidade<br>
           * UNTD - Unidade<br>
           * W - Watt<br>
        Operacao:
          type: integer
          description: |
           Id da operação de conversão das unidades no sistema da PlatinumLog  <br>
           Obs.: Se a unidade informada na tag 'De' for a unidade de medida utilizar a 
           operação de divisão, porém se a unidade informada na tag 'De' for igual 
           a unidade de volume deve-se utilizar a operação de multiplicação.<br>
           valores possíveis: <br>
           * 1 - multiplicacao <br> 
           * 2 - divisao
        Quantidade:
          multipleOf: 0.0001
          type: number
          description: Quantidade usada para conversão
          example: 10
          
    MaterialSuprimentoProdutoPost:
      required:
      - Nome
      - CodigoReferencia
      - UnidadeMedida
      - Tipo
      - Familia
      - Cliente
      - Identificador
      type: object

      properties:
        Nome:
          type: string
          description: Nome do produto
        NomeReduzido:
          type: string
          description: Nome reduzido do produto, esse pode ser utilizado para etiquetas específicas.
        CodigoReferencia:
          type: string
          description: Código de referência do produto
        UnidadeMedida:
          type: string
          description: | 
           Sigla da unidade de medida que será enviada na NFe de remessa, NFe de retorno e na NFe de venda <br>
           Unidades de medida disponíveis:<br>
           * BD - Balde<br>
           * BIG BAG - Big Bag<br>
           * BOB - Bobina<br>
           * BJ - Bujão<br>
           * BY SEND - By Send<br>
           * BY VALUE - By Value<br>
           * CX - Caixa<br>
           * CAIXA - Caixa<br>
           * CM - Caixa Master<br>
           * CDA - Cada<br>
           * CJ - Conjunto<br>
           * CA - Caixa Inner<br>
           * FD - Fardos<br>
           * GF - Garrafas<br>
           * JG - Jogo<br>
           * KGLQ - Peso Líquido<br>
           * KIT - Kit<br>
           * MQ - Máquina<br>
           * MT - Metro<br>
           * M3 - Metro Cubico<br>
           * M2 - Metro Quadrado<br>
           * PCT - Pacote<br>
           * PT - Palete<br>
           * PLT - Palete<br>
           * PR - Pares<br>
           * PECA - Peças<br>
           * PC - Peças<br>
           * PCS - Peças<br>
           * CNTR - Contêiner<br>
           * TON - Tonelada<br>
           * QL - Quilograma<br>
           * KGL - Quilograma<br>
           * KG - Quilograma<br>
           * RL - Rolo<br>
           * SC - Saco<br>
           * TAMBOR - Tambor<br>
           * TB - Tambor<br>
           * TONEL - Tonel<br>
           * T - Tonelada<br>
           * TN - Tonelada<br>
           * TM - Tonelada<br>
           * UN - Unidade<br>
           * UNTD - Unidade<br>
           * W - Watt<br>        
        Tipo:
          type: string
          description: |
           Id do tipo de produto no sistema PlatinumLog <br>
           Valores possíveis:<br> 
           * 3 - produto de terceiro
        Familia:
          type: string
          description: |
           Estrutura da família no sistema da PlatinumLog  <br>
           Valores possíveis: <br> 
           * 3.01 - produto de terceiro  
           * 3.02 -´produto de terceiro (perigoso)           
        Cliente:
          type: string
          description: CNPJ sem máscara do proprietário da mercadoria
        Identificador:
          type: string
          description: |
           Id do identificador no sistema da PlatinumLog <br>
           Valores possíveis: <br>
           * 1 - outros
        CodigoAuxiliar:
          type: string
          description: Campo de uso livre para auxiliar a identificação do produto
        Naturezamercadoria:
          type: string
          description: |
                        Natureza de mercadoria do produto<BR>
                        Consultar as naturezas disponíveis com a Platinum
        Observacao:
          type: string
          description: Enviar os detalhes do produto que serão impressos na etiqueta
        Garantia:
          type: string
          description: Texto referente ao tempo de garantia, esse texto poderá ser utilizado em etiquetas específicas.         
          example: 1 ano contra defeito de fábrica. 
        Fornecedor:
          $ref: "#/components/schemas/InfoFornecedorPost"          
        
        ItemComposicao:
          type: array
          items:
            $ref: "#/components/schemas/ItemComposicaoPost"
        Produto:
          $ref: "#/components/schemas/MaterialSuprimentoDadosProdutoPost"

    InfoFornecedorPost:
      type: object
      properties:
        Pais:
          type: string
          description: Nome do país do fornecedor.
          example: Taiwan
        NomeFornecedor:
          type: string
          description: Nome do fornecedor.

    ItemComposicaoPost:
      type: object
      properties:
        CodigoReferencia:
          type: string
          description:  Codigo de Referencia do Produto
        Quantidade:
          type: string
          description: Quantidade deste item no KIT 
    
    MaterialSuprimentoDadosProdutoPost:
      required:
        - Origem
        - UnidadeVolume
        - UnidadeEstoque
        - PesoLiquidoKG
        - PesoBrutoKG
        - GrupoRotulagem
        - Altura
        - Largura
        - Comprimento
      type: object
      properties:
        Origem:
          type: string
          description:  | 
            Origem do produto. <br>
            Valores possíveis: <br>
            * 1 - Nacional<br>
            * 2 - Estrangeira - Importacao Direta<br>
            * 3 - Estrangeira - Adquirida no Mercado Interno<br>
            * 4 - Nacional (Superior a 40%)<br>
            * 5 - Nacional (Zona Franca Manaus)<br>
            * 6 - Nacional (Inferior a 40%)<br>
            * 7 - Estrangeira - Importacao direta (Camex)<br>
            * 8 - Estrangeira - Adquirida no mercado interno (Camex)<br>
            * 9 - Nacional (Superior a 70%)<br>
        GrupoRotulagem:
          type: string
          description: |
            Id do grupo de rotulagem que contém informações de etiquetas no sistema da PlatinumLog <br>
            Valores possíveis:<br> 
            * 1 - produto
        UnidadeVolume:
          type: string
          description: |
            Sigla da unidade de medida do volume do produto.<br>
            Unidades de medida disponíveis:<br>
            * BD - Balde<br>
            * BIG BAG - Big Bag<br>
            * BOB - Bobina<br>
            * BJ - Bujão<br>
            * BY SEND - By Send<br>
            * BY VALUE - By Value<br>
            * CX - Caixa<br>
            * CAIXA - Caixa<br>
            * CM - Caixa Master<br>
            * CDA - Cada<br>
            * CJ - Conjunto<br>
            * CA - Caixa Inner<br>
            * FD - Fardos<br>
            * GF - Garrafas<br>
            * JG - Jogo<br>
            * KGLQ - Peso Líquido<br>
            * KIT - Kit<br>
            * MQ - Máquina<br>
            * MT - Metro<br>
            * M3 - Metro Cubico<br>
            * M2 - Metro Quadrado<br>
            * PCT - Pacote<br>
            * PT - Palete<br>
            * PLT - Palete<br>
            * PR - Pares<br>
            * PECA - Peças<br>
            * PC - Peças<br>
            * PCS - Peças<br>
            * CNTR - Contêiner<br>
            * TON - Tonelada<br>
            * QL - Quilograma<br>
            * KGL - Quilograma<br>
            * KG - Quilograma<br>
            * RL - Rolo<br>
            * SC - Saco<br>
            * TAMBOR - Tambor<br>
            * TB - Tambor<br>
            * TONEL - Tonel<br>
            * T - Tonelada<br>
            * TN - Tonelada<br>
            * TM - Tonelada<br>
            * UN - Unidade<br>
            * UNTD - Unidade<br>
            * W - Watt<br>
        UnidadeEstoque:
          type: string
          description: |
            Sigla da unidade de medida para controle do saldo em estoque, o ideal é informar a mesma unidade de medida da NF-e.<br>
            Unidades de medida disponíveis:<br>
            * BD - Balde<br>
            * BIG BAG - Big Bag<br>
            * BOB - Bobina<br>
            * BJ - Bujão<br>
            * BY SEND - By Send<br>
            * BY VALUE - By Value<br>
            * CX - Caixa<br>
            * CAIXA - Caixa<br>
            * CM - Caixa Master<br>
            * CDA - Cada<br>
            * CJ - Conjunto<br>
            * CA - Caixa Inner<br>
            * FD - Fardos<br>
            * GF - Garrafas<br>
            * JG - Jogo<br>
            * KGLQ - Peso Líquido<br>
            * KIT - Kit<br>
            * MQ - Máquina<br>
            * MT - Metro<br>
            * M3 - Metro Cubico<br>
            * M2 - Metro Quadrado<br>
            * PCT - Pacote<br>
            * PT - Palete<br>
            * PLT - Palete<br>
            * PR - Pares<br>
            * PECA - Peças<br>
            * PC - Peças<br>
            * PCS - Peças<br>
            * CNTR - Contêiner<br>
            * TON - Tonelada<br>
            * QL - Quilograma<br>
            * KGL - Quilograma<br>
            * KG - Quilograma<br>
            * RL - Rolo<br>
            * SC - Saco<br>
            * TAMBOR - Tambor<br>
            * TB - Tambor<br>
            * TONEL - Tonel<br>
            * T - Tonelada<br>
            * TN - Tonelada<br>
            * TM - Tonelada<br>
            * UN - Unidade<br>
            * UNTD - Unidade<br>
            * W - Watt<br>
        Altura:
          multipleOf: 0.001
          type: number
          description: Altura unitária do produto
          example: 1
        Largura:
          multipleOf: 0.001
          type: number
          description: Largura unitária do produto
          example: 1
        Comprimento:
          multipleOf: 0.001
          type: number
          description: Comprimento unitário do produto
          example: 1
        M2:
          multipleOf: 0.0001
          type: number
          description: Metro quadrado Unitário do produto, se não informado será calculado a partir do comprimento e da largura
          example: 1
        M3:
          multipleOf: 0.0000000001
          type: number
          description: Metro cúbico Unitário do produto, se não informado será calculado a partir do comprimento, da altura e da largura
          example: 1
        PesoLiquidoKG:
          multipleOf: 0.0001
          type: number
          description: Peso liquido unitário do produto
          example: 10
        PesoBrutoKG:
          multipleOf: 0.0001
          type: number
          description: Peso bruto unitário do produto
          example: 1.0001
        TaraKG:
          multipleOf: 0.0001
          type: number
          description: Tara unitária por volume (caixa) do produto
          example: 1.0001
        Armazenagem:
          $ref: "#/components/schemas/MaterialSuprimentoDadosProdutoArmazemPost"
        CodigoBarra:
          type: array
          items:
            $ref: "#/components/schemas/MaterialSuprimentoDadosProdutoCodigoBarraPost"
        FatorConversao:
          type: array
          items:
            $ref: "#/components/schemas/MaterialSuprimentoDadosProdutoFatorConversaoPost"


#####SCHEMAS REQUESTMODY COTACAO DE FRETE#####
    ListaCotacao:
      type: object
      properties:
        Documentacao:
          type: array
          items:
            $ref: "#/components/schemas/CotacaoPost"
      description: Listagem de cotação de frete
      
    CotacaoPost:
      allOf:
      - $ref: "#/components/schemas/CamposPadraoCotacaoPost"
      - required:
        - CnpjRemetente
        - CepOrigem
        - CepDestino
        - Largura
        - Altura
        - Comprimento
        - Peso
        - Quantidade
        - QuantidadeVolume
        - ValorMercadoria

#####SCHEMAS REQUESTMODY ORDEM DE ARMAZENAGEM#####

    ListaOrdem:
      type: object
      properties:
        Ordem:
          type: array
          items:
            $ref: "#/components/schemas/OrdemPost"
      description: Listagem de ordens de armazenagem
      
    OrdemPost:
      allOf:
      - $ref: "#/components/schemas/CamposPadraoOrdemPost"
      - $ref: "#/components/schemas/CamposPadraoOrdem"
      - required:
        - Cliente
        - ClienteFaturamento
        - NaturezaOperacao
        - Deposito
        - ImpressaoNf
        - Data
        - Filial
        - Solicitacao
        - Tipo
        type: object
        properties:
          Atrelar:
            $ref: "#/components/schemas/CamposOrdemAtreladaEntrada"
          Documento:
            $ref: "#/components/schemas/DocumentoPost"
          Entrada:
            $ref: "#/components/schemas/EntradaPost"
          Saida:
            $ref: "#/components/schemas/SaidaPost"
          Anexo:
            $ref: "#/components/schemas/AnexoPost"
        description: Ordem de armazenagem
        
    

    ListaPutOrdem:
      type: object
      properties:
        Ordem:
          type: array
          items:
            $ref: "#/components/schemas/OrdemPut"
      description: Listagem de ordens de armazenagem
      
    OrdemPut:
      allOf:
      - $ref: "#/components/schemas/CamposPadraoOrdemPut"
      - $ref: "#/components/schemas/CamposPadraoOrdem"
      - required:
        - Numero
        - Cliente
        - ClienteFaturamento
        - Data
        - Filial
        - Solicitacao
        - Tipo
        type: object
        properties:
          Atrelar:
            $ref: "#/components/schemas/CamposOrdemAtreladaEntrada"
          Documento:
            $ref: "#/components/schemas/DocumentoPost"
          Entrada:
            $ref: "#/components/schemas/EntradaPost"
          Saida:
            $ref: "#/components/schemas/SaidaPost"
          Anexo:
            $ref: "#/components/schemas/AnexoPost"
        description: Ordem de armazenagem 
     
    CamposPadraoOrdemPut:
      type: object
      properties:
        Numero:
          type: string
          description: Numero da ordem de armazenagem que precisa ser alterada          
        Filial:
          type: string
          description: CNPJ sem máscara da filial da Platinum Log
        Tipo:
          type: integer
          description: |
            ID do tipo de ordem no sistema da PlatinumLog<br> 
            Valores possíveis:<br>
            * 1 – entrada fiscal<br>
            * 8 – entrada estoque<br>
            * 11 – saída venda<br>
        Cliente:
          type: string
          description: CNPJ sem máscara do proprietário da mercadoria
        NaturezaOperacao:
          type: integer
          description: |
            ID da natureza de operação no sistema da PlatinumLog <br>
            Valores possíveis: consultar a Platinum pois cada operação tem a sua natureza
        Deposito:
          type: integer
          description: | 
            ID do depósito no sistema da PlatinumLog <br>
            Valores possíveis: consultar a Platinum pois cada operação tem o seu depósito
        Projeto:
          type: integer
          description: |
            ID do projeto no sistema da PlatinumLog (CAMPO OPCIONAL)<br>
            Valores possíveis: consultar a Platinum pois cada operação tem o seu projeto
        ImpressaoNf:
          type: integer
          description: |
            Id do modelo de relatório de impressão da NF (Informação utilizada apenas em ordens de saída) <br>
            Valores possíveis: <br> 
            * 615 – Danfe padrão (folha A4) <br> 
            * 1024 – Danfe simplificada (Etiqueta 10X17)       
      
        
    CamposPadraoOrdem:
      type: object
      properties:
        Observacao:
          type: string
          description: Observação (CAMPO OPCIONAL)
          example: Campo livre para observação da ordem de armazenagem 
        Solicitacao:
          type: string
          description: Data de solicitação (dd/mm/yyyy hh:mm)
          example: 06/12/1990 13:30
        Data:
          type: string
          description: Data da ordem (dd/mm/yyyy hh:mm)
          example: 06/12/1990 13:30
        NumeroPedido:
          type: string
          description: Número do pedido do cliente da ordem
          example: PED123784
        NumeroControle:
          type: string
          description: Número de controle do cliente da ordem (CAMPO OPCIONAL)
          example: CONTRO1234
        Programacao:
          type: string
          description: Data de programação (dd/mm/yyyy hh:mm)
          example: 07/12/1990 13:30
 
    CamposOrdemAtreladaEntrada:
      type: object
      properties:
        Numero:
          type: string
          description: Número da ordem de armazenagem atrelada
    DocumentoPost:
      allOf:
      - $ref: "#/components/schemas/TipoDocumentoPost"
      - $ref: "#/components/schemas/CamposDocumentoPadrao"
 
    CamposPadraoCotacaoPost:
      type: object
      properties:
        CnpjRemetente:
          type: string
          description: CNPJ do remetente
        CepOrigem:
          type: integer
          description: ID do tipo de ordem no sistema da PlatinumLog
        CepDestino:
          type: string
          description: CNPJ sem máscara do proprietário da mercadoria
        Largura:
          type: integer
          description: consultar a Platinum pois cada operação tem a sua natureza
        Altura:
          type: integer
          description: consultar a Platinum pois cada operação tem o seu depósito
        Comprimento:
          type: integer
          description: consultar a Platinum pois cada operação tem o seu projeto
        Peso:
          type: integer
          description: Danfe simplificada (Etiqueta 10X17)
        Quantidade:
          type: integer
          description: Danfe simplificada (Etiqueta 10X17)
        QuantidadeVolume:
          type: integer
          description: Danfe simplificada (Etiqueta 10X17)
        ValorMercadoria:
          type: integer
          description: Danfe simplificada (Etiqueta 10X17)
          
 
    CamposPadraoOrdemPost:
      type: object
      properties:
        Filial:
          type: string
          description: CNPJ sem máscara da filial da Platinum Log
        Tipo:
          type: integer
          description: |
            ID do tipo de ordem no sistema da PlatinumLog<br> 
            Valores possíveis:<br>
            * 1 – entrada fiscal<br>
            * 8 – entrada estoque<br>
            * 11 – saída venda<br>
            * 27 – entrada logística reversa<br>
        Cliente:
          type: string
          description: CNPJ sem máscara do proprietário da mercadoria
        NaturezaOperacao:
          type: integer
          description: |
            ID da natureza de operação no sistema da PlatinumLog <br>
            Valores possíveis: consultar a Platinum pois cada operação tem a sua natureza
        Deposito:
          type: integer
          description: | 
            ID do depósito no sistema da PlatinumLog <br>
            Valores possíveis: consultar a Platinum pois cada operação tem o seu depósito
        Projeto:
          type: integer
          description: |
            ID do projeto no sistema da PlatinumLog (CAMPO OPCIONAL)<br>
            Valores possíveis: consultar a Platinum pois cada operação tem o seu projeto
        ImpressaoNf:
          type: integer
          description: |
            Id do modelo de relatório de impressão da NF (Informação utilizada apenas em ordens de saída) <br>
            Valores possíveis: <br> 
            * 615 – Danfe padrão (folha A4) <br> 
            * 1024 – Danfe simplificada (Etiqueta 10X17)
          


      
    TipoDocumentoPost:
      type: object
      properties:
        TipoDocumento:
          type: integer
          description: |
           ID do tipo de documento no sistema da PlatinumLog <br>
           Valores possíveis: <br>
           * 1 - CT-e<br>
           * 2 - NF-e<br>
           * 3 - CTRC<br>
           * 4 - NF<br>
           * 5 - ACT<br>
           * 6 - Outros<br>
           * 7 - MDF-e
          
    CamposDocumentoPadrao:
      type: object
      properties:
        Emissao:
          type: string
          description: Data de emissão do documento (dd/mm/yyyy)
          example: 06/12/1990
        Numero:
          type: string
          description: Número do documento
          example: 12345
        Serie:
          type: string
          description: Serie do documento
          example: 1
        Valor:
          multipleOf: 0.01
          type: number
          description: Valor do documento
          example: 1000.5
        ChaveDocumentoEletronico:
          type: string
          description: Chave do documento eletrônico
          example: 24130401211699999126550010001026811138186206


#####SCHEMAS REQUESTMODY INFORMAÇÕES DE ENTRADA#####
    EntradaPost:
      title: Entrada de mercadoria
      description: Somente informar estes dados quando for uma entrada de mercadoria
      allOf:
      - $ref: "#/components/schemas/EntradaPadraoPost"
      - properties:
          Item:
            type: array
            items:
              $ref: "#/components/schemas/ItemEntradaPost"
    EntradaPadraoPost:
      type: object
      properties:
        LocalColeta:
          type: string
          description: CNPJ sem máscara do local de coleta da mercadoria
        Recebimento:
          $ref: "#/components/schemas/RecebimentoPost"
    RecebimentoPost:
      type: object
      properties:
        TipoDescarga:
          type: string
          description: |
            ID do tipo de descarga no sistema da PlatinumLog <br>
            Valores possíveis: <br> 
            * 1001 - truck/carreta <br> 
            * 1002 - cntr 40 <br> 
            * 1003 - cntr 20 <br> 
            * 1004 - carga solta <br> 
            * 1005 - descarga simbólica
        Transportadora:
          type: string
          description: CNPJ sem máscara da transportadora que irá trazer a mercadoria para a Platinum
        UfPlaca:
          type: string
          description: Sigla do estado da placa utilizada no transporte
        Placa:
          type: string
          description: Placa do cavalo utilizada no transporte
          example: ABC-1234
        Carreta:
          type: string
          description: Placa da carreta utilizada no transporte
          example: DEF-5678
        Motorista:
          type: string
          description: Nome do motorista
          example: Pedro da Silva
        NumeroDocumento:
          type: string
          description: Número do documento do motorista. Pode ser CPF, RG..
          example: 874.554.955-85
        DI:
          type: string
          description: Número do documento de importação
          example: AC12
        Processo:
          type: string
          description: Número do processo de importação
          example: ERD123
      description: Dados para recebimento da mercadoria
      
    ItemEntradaPost:
      allOf:
      - $ref: "#/components/schemas/ItemEntradaPadraoPost"
      - properties:
          Lote:
            type: array
            items:
              $ref: "#/components/schemas/ItemLoteEntradaPost"
              
    ItemEntradaPadraoPost:
      required:
      - Item
      - Quantidade
      - ValorUnitario
      - ValorTotal
      - PesoBruto
      - PesoLiquido
      - Volume
      type: object
      description: Dados do item de entrada
      allOf:
      - $ref: "#/components/schemas/ProdutoEntradaPost"
      - $ref: "#/components/schemas/CamposItemOrdemEntradaPadrao"
      
    ProdutoEntradaPost:
      type: object
      properties:
        Produto:
          type: string
          description: Código de referência do produto recebido
    CamposItemOrdemEntradaPadrao:
      required:
      - Produto
      type: object
      properties:
        Quantidade:
          multipleOf: 0.0001
          type: number
          description: Quantidade recebida
          example: 10
        ValorUnitario:
          multipleOf: 0.0000000001
          type: number
          description: Valor unitário do produto recebido
          example: 1.5
        ValorTotal:
          multipleOf: 0.01
          type: number
          description: Valor total do produto recebido
          example: 10
        PesoLiquido:
          multipleOf: 0.0001
          type: number
          description: Peso Líquido do produto recebido
          example: 10
        PesoBruto:
          multipleOf: 0.0001
          type: number
          description: Peso Bruto do produto recebido
          example: 10
        Volume:
          type: integer
          description: Volume total do produto recebido
          example: 10
        Observacao:
          type: string
          description: Observação do item
          example: Observação do item x
      description: Dados do lote de entrada
      
    ItemLoteEntradaPost:
      type: object
      description: Dados do lote de entrada
      allOf:
      - $ref: "#/components/schemas/DadosLoteEntradaPadrao"
      - $ref: "#/components/schemas/ValoresLoteEntradaPadrao"
    DadosLoteEntradaPadrao:
      type: object
      properties:
        Fabricacao:
          type: string
          description: Data de fabricação (dd/mm/yyyy)
          example: 06/12/1990
        Validade:
          type: string
          description: Data de validade (dd/mm/yyyy)
          example: 06/12/1990
        Lote:
          type: string
          description: Numero do lote recebido
          example: 546249967
    ValoresLoteEntradaPadrao:
      type: object
      properties:
        Quantidade:
          multipleOf: 0.0001
          type: number
          description: Quantidade do lote recebido
          example: 10
        PesoLiquido:
          multipleOf: 0.0001
          type: number
          description: Peso Líquido do lote recebido
          example: 10
        PesoBruto:
          multipleOf: 0.0001
          type: number
          description: Peso Bruto do lote recebido
          example: 10
        Valor:
          multipleOf: 0.01
          type: number
          description: Valor do lote recebido
          example: 10
        Volume:
          type: integer
          description: Volume do lote recebido
          example: 10
          
    ListaItemEntrada:
      type: object
      properties:
        Item:
          type: array
          items:
            $ref: "#/components/schemas/ItemPostEntrada"
      description: Listagem de itens da ordem de armazenagem  
      
      
    ListaItemOrdemEntrada:
      type: object
      properties:
        Ordem:
          type: array
          items:
            $ref: "#/components/schemas/OrdemItemPostEntrada"
      description: Listagem de itens da ordem de armazenagem


      
    ListaProgramacaoOrdem:
      type: object
      properties:
        Ordem:
          type: array
          items:
            $ref: "#/components/schemas/OrdemProgramacaoPost"
      description: Listagem de Programaçao da ordem de armazenagem      

    OrdemItemPostEntrada:
      allOf:  
        - $ref: "#/components/schemas/ItemOrdemEntradaPadraoPost"        
        - description: Item da ordem de armazenagem
          type: object
          required:
            - Filial
            - Numero
            - Cliente

          properties:
            Item:
              type: array
              items:
                $ref: "#/components/schemas/ItemPostEntrada" 

    OrdemProgramacaoPost:
      allOf:  
        - $ref: "#/components/schemas/ProgramacaoOrdemSaidaPadraoPost"       
        - description: Programação da ordem de armazenagem
          type: object
          required:
            - Filial
            - Numero
            - Cliente
          properties:
            Programacao:
              type: array
              items:
                $ref: "#/components/schemas/ProgramacaoPostSaida" 
              
    ProgramacaoPostSaida:
      allOf:
      - $ref: "#/components/schemas/ProgramacaoPost"


    ProgramacaoOrdemSaidaPadraoPost:
      type: object
      properties:
        Numero:
          type: string
          description: Número da ordem em que será adicionado o Item
        Filial:
          type: string 
          description: CNPJ sem máscara da filial da Platinum         
        Cliente:       
          type: string 
          description: CNPJ sem máscara do proprietário da mercadoria               
  
 
    ItemOrdemEntradaPadraoPost:
      type: object
      properties:
        Numero:
          type: string
          description: Número da ordem em que será adicionado o Item
        Filial:
          type: string 
          description: CNPJ sem máscara da filial da Platinum         
        Cliente:       
          type: string 
          description: CNPJ sem máscara do proprietário da mercadoria           
      
    ItemPostEntrada:
      allOf:
      - $ref: "#/components/schemas/ItemEntradaPadraoPost"
      - properties:
          Lote:
            type: array
            items:
              $ref: "#/components/schemas/ItemLoteEntradaPost"
                           
 
#####SCHEMAS REQUESTMODY DOCUMENTO ORIGINARIO#####
    ListaOriginario:
      type: object
      properties:
        Ordem:
          type: array
          items:
            $ref: "#/components/schemas/OrdemOriginario"
      description: Listagem de produtos   
  
    ListaOriginarioporpedido:
      type: object
      properties:
        Ordem:
          type: array
          items:
            $ref: "#/components/schemas/OrdemOriginarioporpedido"
      description: Listagem de produtos   

    OrdemOriginarioporpedido:
      type: object
      properties:
        NumeroPedido:
          type: string
          description: Número de pedido informado pelo cliente no momento do cadastro da ordem de armazenagem.
        Filial:
          type: string
          description: Filial da ordem de armazenagem.
        Cliente:
          type: string
          description: Cliente da ordem de armazenagem.
        Nfe:
          type: object
          properties:
            Xml:
              type: string
              format: byte
              description: XML de NF-e em base 64
              example: 
        
        Anexo:        
          type: array
          items:
                type: object
                format: byte
                $ref: "#/components/schemas/AnexoOriginarioPost"
   
    OrdemOriginario:
      type: object
      properties:
        Numero:
          type: string
          description: Número da ordem de armazenagem.
        Filial:
          type: string
          description: Filial da ordem de armazenagem.
        Cliente:
          type: string
          description: Cliente da ordem de armazenagem.
        Nfe:
          type: object
          properties:
            Xml:
              type: string
              format: byte
              description: XML de NF-e em base 64
              example: 
        
        Anexo:        
          type: array
          items:
                type: object
                format: byte
                $ref: "#/components/schemas/AnexoOriginarioPost"
 
 

#####SCHEMAS REQUESTMODY INFORMAÇÕES DE SAIDA#####
    SaidaPost:
      allOf:
        - $ref: "#/components/schemas/CamposPadraoSaidaPost" 
        - properties:  
            Programacao:
              type: array
              items:
                $ref: "#/components/schemas/ProgramacaoPost" 

    CamposPadraoSaidaPost:
      title: Saída de mercadoria
      description: Somente informar estes dados quando for uma saída de mercadoria
      type: object
      properties:
        TipoTransporte:
          type: string        
          description: |
            ID do tipo de transporte no sistema da PlatinumLog <br>
            Valores possíveis: <br> 
            * 1 - transportadora <br> 
            * 2 - pac <br> 
            * 3 - sedex <br> 
            * 4 - sedex 10 <br> 
            * 5 - e-sedex <br> 
            * 6 - cliente"
        Transportadora: 
          description: CNPJ sem máscara da transportadora que irá retirar a mercadoria na Platinum
          type: string
        NomeClienteFinal: 
          description: Nome do cliente final que irá receber a mercadoria, será impresso na etiqueta de expedição
          type: string
          example: "João da Silva"
        Municipio: 
          description: Nome do município de entrega da mercadoria. Letras e caixa alta e sem acentuação ou caracteres especiais.
          type: string
        UF: 
          description: Sigla do estado de entrega da mercadoria
          type: integer
 
    ProgramacaoPost:
      description: Programação de saída de mercadoria
      type: object
      required:
        - Produto
        - UnidadeMedida
        - Quantidade
        - SequencialPedido
      properties:
        Produto: 
          description: Código de referência do produto no pedido
          type: string
        UnidadeMedida: 
          description: | 
            Sigla da unidade de medida do produto no pedido<br>
            Unidades de medida disponíveis:<br>
            * BD - Balde<br>
            * BIG BAG - Big Bag<br>
            * BOB - Bobina<br>
            * BJ - Bujão<br>
            * BY SEND - By Send<br>
            * BY VALUE - By Value<br>
            * CX - Caixa<br>
            * CAIXA - Caixa<br>
            * CM - Caixa Master<br>
            * CDA - Cada<br>
            * CJ - Conjunto<br>
            * CA - Caixa Inner<br>
            * FD - Fardos<br>
            * GF - Garrafas<br>
            * JG - Jogo<br>
            * KGLQ - Peso Líquido<br>
            * KIT - Kit<br>
            * MQ - Máquina<br>
            * MT - Metro<br>
            * M3 - Metro Cubico<br>
            * M2 - Metro Quadrado<br>
            * PCT - Pacote<br>
            * PT - Palete<br>
            * PLT - Palete<br>
            * PR - Pares<br>
            * PECA - Peças<br>
            * PC - Peças<br>
            * PCS - Peças<br>
            * CNTR - Contêiner<br>
            * TON - Tonelada<br>
            * QL - Quilograma<br>
            * KGL - Quilograma<br>
            * KG - Quilograma<br>
            * RL - Rolo<br>
            * SC - Saco<br>
            * TAMBOR - Tambor<br>
            * TB - Tambor<br>
            * TONEL - Tonel<br>
            * T - Tonelada<br>
            * TN - Tonelada<br>
            * TM - Tonelada<br>
            * UN - Unidade<br>
            * UNTD - Unidade<br>
            * W - Watt<br>
          type: string
        Quantidade:
          description: Quantidade do produto no pedido
          type: number
          multipleOf: 0.0001
          example: 5.0000
        SequencialPedido: 
          description: Sequencial do produto no pedido
          type: integer
          example: 1
        Observacao: 
          description: Observação
          type: string
          example: "Observação da programação x"
        NumeroPedido:
          description: Número do Pedido de Entrada para filtrar
          type: string
          example: "ASC0727/23"
        Lote:
          description: Lote de entrada para buscar
          type: string
          example: "HD230306A"
          


#####SCHEMAS REQUESTMODY INFORMAÇÕES DO ANEXO DA ORDEM DEARMAZENAGEM
    AnexoPost:
      description: Anexo da Ordem de armazenagem (geralmente utilizada para enviar etiquetas que precisam ser impressas na expedição)
      type: object
      required:
        - Tipo
        - Nome
        - Arquivo
      properties:
        Tipo: 
          description: |
            Nome do tipo do anexo de ordem de armazenagem. <br>
            Valores Possíveis: <br> 
            * Etiqueta do transporte - para importar no sistema PlatinumLog etiqueta que precisa ser colada no produto na expedição
          type: string
        Nome: 
          description: Nome do arquivo, com a extensão     
          type: string
          example: arquivo.zpl
        Arquivo:
          type: string
          format: byte
          description: Arquivo a ser anexado, em base 64
          example: "dGVzdGU="
          
#####SCHEMAS REQUESTMODY INFORMAÇÕES DO ANEXO DA ORDEM DE ARMAZENAGEM
    AnexoOriginarioPost:
      description: Para adicionar anexo na Ordem de armazenagem (geralmente utilizada para enviar etiquetas que precisam ser impressas na expedição) ou no documento originário (Boletos e guias que precisam ser anexadas a NF-e no transporte).
      type: object
      required:
        - Tipo
        - Nome
        - Arquivo
      properties:
        Tipo: 
          description: |
            Nome do tipo do anexo de ordem de armazenagem. <br>
            Valores Possíveis: <br> 
            * Etiqueta do transporte - para importar no sistema PlatinumLog etiqueta que precisa ser colada no produto na expedição <br> 
            * Documento auxiliar - para importar no sistema PlatinumLog documentos que precisam ser impressos e anexados a NF-e de venda <br> 
            * Fatura - para importar no sistema PlatinumLog boleto que precisa ser impresso e anexado a NF-e de venda <br> 
          type: string
        Nome: 
          description: Nome do arquivo, com a extensão     
          type: string
        Arquivo:
          type: string
          format: byte
          description: Arquivo a ser anexado, em base 64
          example: "dGVzdGU="
 

#####REQUESTMODY#####
  requestBodies:
 
#####POST E PUT PRODUTO#####
    PostProduto:
      content:
        application/json:
          schema:
            title: Novo produto
            type: object
            properties:
              Lista:
                $ref: "#/components/schemas/ListaProduto"
            description: Produto

#####POST COTACAO#####
    PostConsultarFrete:
      content:
        application/json:
          schema:
            title: Nova Cotação de Frete
            type: object
            properties:
              Lista:
                $ref: "#/components/schemas/ListaCotacao"
            description: Cotação de Frete

#####POST ORDEM#####
    PostOrdemArmazenagem:
      content:
        application/json:
          schema:
            title: Nova Ordem de Armazenagem
            type: object
            properties:
              Lista:
                $ref: "#/components/schemas/ListaOrdem"
            description: Ordem de Armazenagem

#####PUT ORDEM#####
    PutOrdemArmazenagem:
      content:
        application/json:
          schema:
            title: Nova Ordem de Armazenagem
            type: object
            properties:
              Lista:
                $ref: "#/components/schemas/ListaPutOrdem"
            description: Ordem de Armazenagem

#####
    DeleteOrdemArmazenagem:
      content:
        application/json:
          schema:
            title: Cancelar ordem
            required:
            - Motivo
            type: object
            properties:           
              Motivo:
                type: string
            description: Ordem

#####
    PostItemOrdemArmazenagem:
      content:
        application/json:
          schema:
            title: Novo item da ardem de Armazenagem
            type: object
            properties:
              Lista:
                $ref: "#/components/schemas/ListaItemEntrada"
            description: Item da ordem de Armazenagem
 

#####
    PostOrdemItemArmazenagem:
      content:
        application/json:
          schema:
            title: Novo item da ardem de Armazenagem
            type: object
            properties:
              Lista:
                $ref: "#/components/schemas/ListaItemOrdemEntrada"
            description: Item da ordem de Armazenagem 
            
            
#####
    PostOrdemProgramacaoArmazenagem:
      content:
        application/json:
          schema:
            title: Nova programação da ardem de Armazenagem
            type: object
            properties:
              Lista:
                $ref: "#/components/schemas/ListaProgramacaoOrdem"
            description: Programação da ordem de Armazenagem             

#####
    PostOriginario:
      content:
        application/json:
          schema:
            title: Nova NF-e de remessa para armazenagem
            type: object
            properties:
              Lista:
                $ref: "#/components/schemas/ListaOriginario"
            description: Xml de NF-e de remessa
 

#####
    PostOriginarioporpedido:
      content:
        application/json:
          schema:
            title: Nova NF-e de remessa para armazenagem
            type: object
            properties:
              Lista:
                $ref: "#/components/schemas/ListaOriginarioporpedido"
            description: Xml de NF-e de remessa 



 ###SECURITY###
  securitySchemes:
    BasicAuth:
      type: http
      description: "A autenticação inicial com as APIs REST da PlatinumLog deve ser realizada por uma requisição GET utilizando Basic Auth.\nPara autenticar, você deve informar o usuário e senha fornecidos pelo cliente.\n\nEsta requisição irá retornar um token que deverá ser utilizado para autenticação nas demais rotas. \n\nEste token tem uma validade de 24 horas, e após este intervalo, deverá ser requisitado um novo token.\n"
      scheme: basic
    BearerAuth:
      type: http
      description: "A autenticação com as APIs REST da PlatinumLog deve ser realizadas por token utilizando Bearer Token.\nPara autenticar, você deve utilizar o token recebido na rota de Login e adicioná-lo no header da requisição. \n\nO header de autenticação deve ser enviado para todos os endpoints disponíveis na API.\n"
      scheme: bearer